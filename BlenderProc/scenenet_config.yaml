# Args: <obj_file> <texture_file> <output_dir>
{
  "version": 3,
  "setup": {
    "blender_install_path": "blender/",
    "pip": [
      "h5py"
    ]
  },
  "modules": [
    {
      "module": "main.Initializer",
      "config":{
        "global": {
          "output_dir": "<args:2>"
        }
      }
    },
    {
      "module": "loader.SceneNetLoader",
      "config": {
        "file_path": "<args:0>",
        "texture_folder": "<args:1>"
      }
    },
    {
      "module": "object.FloorExtractor",
      "config": {
        "selector": {
          "provider": "getter.Entity",
          "conditions": {
            "cp_category_id": 1
          }
        }, # this one you need to now beforehand
        "compare_angle_degrees" : 7.5,
        "compare_height": 0.15,
        "name_for_split_obj": "floor",  # this is the new name of the object
        "add_properties": {
          "cp_category_id": 2
        },
        "should_skip_if_object_is_already_there": True
      }
    },
    {
      "module": "object.FloorExtractor",
      "config": {
        "selector": {
          "provider": "getter.Entity",
          "conditions": {
            "cp_category_id": 1
          }
        },
        "should_skip_if_object_is_already_there": True,
        "up_vector_upwards": False,  # the polygons are now facing downwards: [0, 0, -1]
        "compare_angle_degrees": 7.5,
        "compare_height": 0.15,
        "add_properties": {
          "cp_category_id": 2
        },
        "name_for_split_obj": "ceiling"
      }
    },
    {
      "module": "lighting.SurfaceLighting",
      "config": {
        "selector": {
          "provider": "getter.Entity",
            "conditions": {
              "name": ".*[l|L]amp.*"
            }
        },
        "emission_strength": 15.0,
        "keep_using_base_color": True
      }
    },
    {
      "module": "lighting.SurfaceLighting",
      "config": {
        "selector": {
          "provider": "getter.Entity",
            "conditions": {
              "name": ".*[c|C]eiling.*"
            }
        },
        "emission_strength": 2.0,
      }
    },
    {
      "module": "camera.CameraSampler",
      "config": {
        "min_var_diff_translation": 5.0,
         "intrinsics": {
          "fov": 1,
          "pixel_aspect_x": 1.333333333
        },
        "cam_poses": [{
          "number_of_samples": 4,
          "proximity_checks": {
            "min": 1.0
          },
          "min_interest_score": 0.1,
          "location": {
            "provider": "sampler.UpperRegionSampler",
            "min_height": 1.5,
            "max_height": 1.8,
            "to_sample_on": {
              "provider": "getter.Entity",
              "conditions": {
                "cp_category_id": 2
              }
            }
          },
          "rotation": {
            "value": {
              "provider":"sampler.Uniform3d",
              "max":[1.2217, 0, 6.283185307],
              "min":[1.2217, 0, 0]
            }
          },
          "check_if_pose_above_object_list": {
            "provider": "getter.Entity",
            "conditions": {
              "cp_category_id": 2,
              "type": "MESH"
            }
          }
        }]
      }
    },
    {
      "module": "renderer.RgbRenderer",
      "config": {
        "samples": 350,
        "render_normals": True,
        "render_distance": True,
      }
    },
    {
      "module": "renderer.SegMapRenderer",
      "config": {
        "use_alpha": true
      }
    },
    {
      "module": "writer.CameraStateWriter",
      "config": {
        "attributes_to_write": ["location", "rotation_forward_vec", "rotation_up_vec"],
        # this line is necessary so that it can be used in the SDFGen
        "destination_frame": ["X", "Z", "-Y"]
      }
    },
    {
      "module": "writer.Hdf5Writer",
      "config": {
        "postprocessing_modules": {
          "distance": [
            {
              "module": "postprocessing.TrimRedundantChannels",
            }
          ]
        }
      }
    }
  ]
}
